name: Self-Healing Pipeline

on:
  push:
    branches:
      - main

env:
  HEALTH_CHECK_URL: "http://localhost:8090/health"
  BACKUP_IMAGE: "demo-app-stable"
  NOTIFICATION_EMAIL: "team@example.com"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set Up JDK
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Build Application and Docker Image
      - name: Build Application
        run: |
          mvn clean install
          docker build -t demo-app .

      - name: Deploy Application
        run: |
          echo "Deploying application..."
          
          # Check if the container is running, stop and remove it only if it's running
          if [ "$(docker ps -q -f name=demo-app)" ]; then
            docker stop demo-app
            docker rm demo-app
          fi
          
          docker run --rm -d --name demo-app -p 8090:8090 demo-app
          
          echo "Waiting for the application to start..."
          sleep 15  # Wait for 15 seconds (adjust as necessary)
          
          response=$(curl -s -o /dev/null -w "%{http_code}" $HEALTH_CHECK_URL)
          if [ "$response" != "200" ]; then
            echo "Health check failed, triggering rollback..."
            docker stop demo-app || true
            docker rm demo-app || true
            exit 1
          else
            echo "Health check passed."
          fi

      # Step 5: Health Check
      - name: Health Check
        id: health-check
        run: |
          echo "Performing health check..."
          response=$(curl -s -o /dev/null -w "%{http_code}" $HEALTH_CHECK_URL)
          if [ "$response" != "200" ]; then
            echo "Health check failed, triggering rollback..."
            docker stop demo-app || true
            docker rm demo-app || true
            exit 1
          else
            echo "Health check passed."
          fi

      # Step 6: Fallback Deployment (Triggered on Health Check Failure)
      - name: Deploy Fallback Version
        if: failure()
        run: |
          echo "Deploying fallback version..."
          docker stop demo-app || true
          docker rm demo-app || true
          docker run --rm -d --name demo-app -p 8090:8090 $BACKUP_IMAGE

      # Step 7: Notify Team on Failure
      - name: Notify Team on Failure
        if: failure()
        run: |
          echo "Sending failure notification to $NOTIFICATION_EMAIL"
