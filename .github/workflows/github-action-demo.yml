name: Self-Healing Pipeline

on:
  push:
    branches:
      - main

env:
  MAX_RETRIES: 5
  HEALTH_CHECK_URL: "http://localhost:8089/health"
  BACKUP_IMAGE: "demo-app-stable"
  NOTIFICATION_EMAIL: "team@example.com"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set Up JDK (Try using JDK 17 instead of 21)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Build Application and Docker Image
      - name: Build Application
        run: |
          mvn clean install
          docker build -t demo-app .

      # Step 4: Deploy Application
      - name: Deploy Application
        run: |
          echo "Checking for existing processes on port 8089..."
          lsof -i :8089 | grep LISTEN && kill -9 $(lsof -t -i :8089) || true
          echo "Deploying application..."
          docker stop demo-app || true
          docker rm demo-app || true
          docker run --rm -d --name demo-app -p 8089:8089 demo-app

      # Step 5: Health Check
      - name: Health Check
        id: health-check
        run: |
          echo "Starting health check..."
          retries=$MAX_RETRIES
          health_check_success=false
          
          for ((i=1; i<=retries; i++)); do
            response=$(curl -s -o /dev/null -w "%{http_code}" $HEALTH_CHECK_URL)
            if [ "$response" == "200" ]; then
              echo "Health check passed."
              health_check_success=true
              break
            else
              echo "Health check failed, retrying... ($i/$retries)"
              sleep 5
            fi
          done

          if [ "$health_check_success" != "true" ]; then
            echo "Health check failed after $MAX_RETRIES retries. Triggering rollback..."
            docker stop demo-app || true
            docker rm demo-app || true
            exit 1
          fi

      # Step 6: Fallback Deployment (Triggered on Health Check Failure)
      - name: Deploy Fallback Version
        if: failure()
        run: |
          echo "Deploying fallback version..."
          docker stop demo-app || true
          docker rm demo-app || true
          docker run --rm -d --name demo-app -p 8089:8089 $BACKUP_IMAGE

      # Step 7: Notify Team on Failure
      - name: Notify Team on Failure
        if: failure()
        run: |
          echo "Sending failure notification to $NOTIFICATION_EMAIL"
